; This is the FID loader, which is loaded at &ED9A.
; I'm not quite sure how/when it gets run.

; Note the labels are some offset from the beginning of the module;
; some offset based on absolute current load address.
;
; Don't treat them as addresses, treat them as labels!

org 0xed9a

start:
		JP label_eda6
		JP label_eda9
		JP jmp_f070
		JP label_0238

label_eda6:
		JP jump_03e6

label_eda9:
		CALL call_edb7		; What's this initial routine do?
		CALL 0xFC5A		; Maybe I do need to revisit these
					; and what I thought was data, something is
					; up here.
		DEFW 0xF3B7		;
		CALL 0xFC5A		;
		DEFW 0xF46A		;
		RST 0			; start CP/M at this point?
call_edb7:
		LD E, 0xFE
		CALL call_0229
		LD B, 0x01
label_0024:
		PUSH BC
		LD DE, data_005c
		CALL call_ef89
		JR NC, label_005a
		JR label_0034
label_002f:
		CALL call_ef93
		JR NC, label_005a
label_0034:
		DJNZ label_002f
		PUSH HL
		LD HL, 0x005C
		PUSH HL
		LD (HL), 0x0
		LD DE, 0x005D
		LD BC, 0x0023
		LDIR
		POP DE
		POP HL
		LD B, 0x0B
		PUSH DE
label_004a:
		INC HL
		INC DE
		LD A, (HL)
		AND 0x7f
		LD (DE), A
		DJNZ label_004a
		POP DE
		CALL call_ee05
		POP BC
		INC B
		JR label_0024
label_005a:
		POP BC
		RET

data_005c:
		DEFB 0x01, 0x3f, 0x3f, 0x3f	; not sure about 01;
						; the rest is ???????? FI?
						; so it's looking for FI?
						; files to load.

		DEFB 0x3f, 0x3f, 0x3f, 0x3f, 0x3f
		DEFB 0x46, 0x49, 0x3f

		DEFB 0x00, 0x00, 0x00

call_ee05:
		CALL call_efbb
		RET NC
		CALL call_eec3
		JP NC, jmp_0225
		LD A, (0x0067)
		LD (data_eeba), A	; modifying last byte in 'FID'
		PUSH DE
		LD DE, 0x0203
		LD HL, data_eeb0	; local data
		LD B, 0x0B		; 11 - 8 + 3 byte filename match
label_0084:
		LD A, (DE)
		CP (HL)
		JR NZ, label_00b3
		INC DE
		INC HL
		DJNZ label_0084
		CALL call_eef5
		LD B, H
		LD C, L
		LD DE, 0x0100
		LD HL, 0x0000
label_0097:
		LD A, (DE)
		INC DE
		ADD A, L
		LD L, A
		ADC A, H
		SUB A, L
		LD H, A
		DEC BC
		LD A, B
		OR C
		JR NZ, label_0097
		LD DE, (0x0210)
		LD C, E
		SBC HL, BC
		LD C, D
		OR A
		SBC HL, BC
		OR A
		SBC HL, DE
		JR Z, label_00b7
label_00b3:
		POP DE
		JP jmp_0225
label_00b7:
		POP HL
		PUSH HL
		INC HL
		LD DE, 0x0203
		LD BC, 0x000B
		LDIR
		POP DE
		CALL 0xFC5A		; ?
		DEFW 0xEEBB		; ?
		LD (0x021E), HL
		CALL jmp_0225
		RET NC
		LD HL, (0x0101)
		LD DE, (0x0104)
		ADD HL, DE
		EX DE, HL
		CALL call_f2c0
		RET NC
		PUSH DE
		PUSH HL
		CALL call_ef21
		POP HL
		JR NC, label_010c
		LD BC, 0x0001
		PUSH HL
		CALL 0xFC57
		POP HL
		LD BC, (0x0101)
		LD DE, 0x0200
		PUSH HL
		CALL 0xFC4B
		POP HL
		PUSH HL
		LD (data_ee9e), HL	; inline modification!
		LD C, 0x03
		LD DE, 0x0000
		CALL 0xFC5A
data_ee9e:
		DEFW 0x0000		; inline modification?
		PUSH AF
		CALL call_ef0f
		POP AF
		POP HL
label_010c:
		POP DE
		JP NC, call_f1bd

		CALL 0xFC5A
		DEFW 0xEEBF
		RET

data_eeb0:
		DEFB 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a
data_eeb8:
		DEFB 0x46, 0x49		; 'FI'
data_eeba:
		DEFB 0x44		; 'D', is modified during startup

		LD HL, (0x5904)
		RET

		LD (0x5904), HL
		RET

call_eec3:
		LD HL, 0x0100
		CALL call_efa7
		RET NC
		CALL call_eef5
		LD A, L
		ADD HL, HL
		LD L, H
		LD H, 0x00
		AND 0x7F
		JR Z, label_013c
		INC HL
label_013c:
		DEC HL
		LD B, H
		LD C, L
		LD HL, 0xFF80		; keyboard? stack?
		ADD HL, BC
		CCF
		RET NC
		LD HL, 0x0180
label_0148:
		CALL call_efa7
		RET NC
		LD A, L
		ADD A, 0x80

		LD L, A
		ADC A, H
		SUB A, L
		LD H, A
		DEC BC
		LD A, B
		OR C
		JR NZ, label_0148
		SCF
		RET

call_eef5:
		PUSH DE
		PUSH BC
		LD HL, (0x0101)
		LD D, H
		LD E, L
		LD B, 0x03
label_0164:
		SRL H
		RR L
		DJNZ label_0164
		LD A, E
		AND 0x07
		JR Z, label_0170
		INC HL

label_0170:
		ADD HL, DE
		INC H
		POP BC
		POP DE
		RET

call_ef0f:
		CALL 0xFC5A
		DEFW 0xEF1F
		INC HL
		LD C, A
		INC A
		RET Z
		PUSH HL
		CALL 0xFC0C
		POP HL
		JR call_ef0f

		LD A, (HL)
		RET

call_ef21:
		DEC H
		LD DE, (0x0101)
		LD IX, 0x0200		; First time I've seen
		LD IY, 0x0200		; IX/IY used in these code files!
		ADD IY, DE
		LD B, 0x08
		LD C, (IY+0)
label_019b:
		SLA C
		JR NC, label_01b4
		LD A, (IX+0)
		CP 0xFF
		JR Z, label_01ac
		ADD A, H
		LD (IX+0), A
		JR label_01b4
label_01ac:
		PUSH HL
		PUSH BC
		CALL call_ef60
		POP BC
		POP HL
		RET NC
label_01b4:
		DJNZ label_01bd
		LD B, 0x08
		INC IY
		LD C, (IY+0)
label_01bd:
		INC IX
		DEC DE
		LD A, D
		OR E
		JR NZ, label_019b
		SCF
		RET

call_ef60:
		LD A, (IX+0xFF)
		LD B, 0x04
		LD HL, data_ef7d
label_01ce:
		CP (HL)
		INC HL
		JR NZ, label_01dd
		LD A, (HL)
		LD (IX+0xFF), A
		INC HL
		LD A, (HL)
		LD (IX+0), A
		SCF
		RET

label_01dd:
		INC HL
		INC HL
		DJNZ label_01ce
		OR A
		RET

data_ef7d:
		DEFB 0x00, 0x70, 0xf0, 0x01, 0xd2
		DEFB 0xef, 0x02, 0xf5, 0x00, 0x03, 0x83, 0x00

call_ef89:
		LD HL, 0x0080
		CALL call_efb3
		LD A, 0x11
		JR label_01fb

call_ef93:
		LD A, 0x12
label_01fb:
		CALL call_efc5
		RET NC
		ADD A, A
		ADD A, A
		ADD A, A
		ADD A, A
		ADD A, A
		ADD A, 0x80
		LD L, A
		ADC A, 0x00
		SUB A, L
		LD H, A
		SCF
		RET

call_efa7:
		CALL call_efb3

		LD A, 0x14
		CALL call_efc5
		OR A
		RET NZ
		SCF
		RET

call_efb3:
		EX DE, HL
		LD A, 0x1A
		CALL call_efc5
		EX DE, HL
		RET

call_efbb:
		LD A, 0x0F
		JR call_efc5
jmp_0225:
		LD A, 0x10
		JR call_efc5
call_0229:
		LD A, 0x2D
call_efc5:
		PUSH HL
		PUSH DE
		PUSH BC
		LD C, A
		CALL 0x0005		; BDOS entry point
		CP 0xFF
		POP BC
		POP DE
		POP HL
		RET

label_0238:
		PUSH DE
		PUSH HL
		CALL call_f04f
		LD A, 0x02
		JR C, label_026f
		LD DE, 0x0008
		CALL call_f2eb
		LD A, 0x01
		JR NC, label_026f
		DEC HL
		EX DE, HL
		POP HL
		PUSH DE
		PUSH BC
		LD BC, 0x0008
		LDIR			; copy block!
		XOR A
		LD (DE), A
		POP BC
		POP HL
		EX (SP), HL
		EX DE, HL
		LD HL, 0x58E0
		ADD HL, BC
		ADD HL, BC
		LD (HL), E
		INC HL
		LD (HL), D
		EX DE, HL
		POP DE
		LD B, C
		PUSH BC
		PUSH DE
		CALL call_f4b3
		POP DE
		POP BC
		SCF
		RET
label_026f:
		POP HL
		POP DE
		OR A
		RET

		LD HL, data_f021
		JR label_0238
		LD HL, data_f029
		JR label_0238
		LD HL, data_f031
		JR label_0238
		LD HL, data_f039
		JR label_0238

data_f021:
		DEFB 0x43, 0x52, 0x54, 0x20, 0x20, 0x20, 0x03, 0x00
		; 'CRT   ', 0x3, 0x0

data_f029:
		DEFB 0x4c, 0x50, 0x54, 0x20, 0x20, 0x20, 0x02, 0x00
		; 'LPT   ', 0x2, 0x0

data_f031:
		DEFB 0x53, 0x49, 0x4f, 0x20, 0x20, 0x20, 0x0f, 0x0e
		; 'SIO   ', 0xf, 0xe

data_f039:
		DEFB 0x43, 0x45, 0x4e, 0x20, 0x20, 0x20, 0x02, 0x00
		; 'CEN   ', 0x2, 0x0

		CALL call_f04f
		RET NC
		LD HL, 0x58E0
		ADD HL, BC
		ADD HL, BC
		LD E, (HL)
		INC HL
		LD D, (HL)
		SCF
		RET

call_f04f:
		LD DE, 0xFF50
		LD C, 0xFF		; Loop really starts at 0
label_02ba:
		INC C			; cause inc happens first in loop
		LD A, (DE)
		OR A
		LD B, A
		RET Z
		PUSH HL
		PUSH DE
		LD B, 0x06
label_02c3:
		LD A, (DE)
		XOR (HL)
		INC DE
		INC HL
		JR NZ, label_02cb
		DJNZ label_02c3
label_02cb:
		POP DE
		LD HL, 0x0008
		ADD HL, DE
		EX DE, HL
		POP HL
		JR NZ, label_02ba
		SCF
		RET

jmp_f070:
		PUSH IX
		LD IX, 0x0002
		ADD IX, SP		; IX = IX + SP
		PUSH IY
		PUSH HL
		PUSH DE
		CALL call_f15e
		PUSH HL
		LD A, 0x02
		JP NC, label_03bd
		LD DE, 0x001D
		CALL call_f28f
		JP NC, label_f155
		PUSH HL
		POP IY
		LD D, H
		LD E, L
		INC DE
		LD (HL), 0x00
		PUSH BC
		LD BC, 0x001C
		LDIR			; block copy!
		POP BC
		LD (IY+0x02), B		; Double check this block!
		LD E, (IX+0xF8)
		LD D, (IX+0xF9)
		LD (IY+0x00), E
		LD (IY+0x01), D
		LD DE, 0x0011
		CALL call_f28b
		JP NC, jmp_f14c
		LD (IY+0x10), L
		LD (IY+0x11), H
		LD E, (IX+0xFA)
		LD D, (IX+0xFB)
		CALL call_f28f
		JP NC, 0xF140
		LD (IY+0x14), L
		LD (IY+0x15), H
		LD E, (IX+0xFE)
		LD D, (IX+0xFF)
		LD A, D
		OR E
		JR Z, label_0348
		CALL call_f28f
		JR NC, label_0397
		LD (IY+0x12), L
		LD (IY+0x13), H
label_0348:
		LD E, (IX+0xFC)
		LD D, (IX+0xFD)
		LD A, D
		OR E
		JR Z, label_0364
		LD (IY+0x1C), 0x02
		CALL call_f292
		JR C, label_0367
		LD (IY+0x1C), 0x00
		CALL call_f28f
		JR C, label_0367
label_0364:
		LD HL, 0xFFFF
label_0367:
		LD (IY+0x1A), L
		LD (IY+0x1B), H
		PUSH IY
		POP HL
		LD DE, 0x0004
		ADD HL, DE
		EX DE, HL
		LD L, (IX+0xF6)
		LD H, (IX+0xF7)
		LD (HL), E
		INC HL
		LD (HL), D
		LD (IY+0x16), 0x00
		LD (IY+0x17), 0x59
		LD (IY+0x18), 0x02
		LD (IY+0x19), 0x59
		LD L, (IY+0x10)
		LD H, (IY+0x11)
		SCF
		JR label_03be
label_0397:
		LD E, (IX+0xFA)
		LD D, (IX+0xFB)
		LD L, (IY+0x14)
		LD H, (IY+0x15)
		CALL call_f1bd
		LD DE, 0x0011
		LD L, (IY+0x10)
		LD H, (IY+0x11)
		CALL call_f1c0
jmp_f14c:
		LD DE, 0x001D
		PUSH IY
		POP HL
		CALL call_f1bd
label_f155:
		LD A, 0x01
label_03bd:
		OR A
label_03be:
		LD SP, IX		; whoa why?
		PUSH HL
		POP IX
		RET

call_f15e:
		CALL 0xFC42
		LD A, B
		CP 0xFF
		JR NZ, label_03d9
label_03cc:
		INC B
		LD A, (HL)
		INC HL
		OR (HL)
		JR Z, label_03e3
		INC HL
		LD A, B
		CP 0x0F
		JR NZ, label_03cc
		RET

label_03d9:
		ADD A, A		; .. what is this?
		ADD A, L		;
		LD L, A			;
		ADC A, H		;
		SUB A, L		;
		LD H, A			;
		LD A, (HL)		;

		INC HL			;
		OR (HL)
		RET NZ
label_03e3:
		DEC HL
		SCF
		RET

jump_03e6:
		LD HL, 0xF4C2		; XXX local
		LD DE, 0x0005
		LD B, 0x0A
label_03ee:
		LD (HL), 0xFF
		ADD HL, DE
		DJNZ label_03ee
		XOR A			; blank A
		LD (0xF4C1), A		; XXX local
		LD DE, 0x008F
		LD HL, 0xFF51
		CALL call_f1c0

		LD DE, 0x0400
		LD HL, 0x7C00
		LD A, 0x02
		CALL label_0428
		LD DE, 0x0200
		LD HL, 0x8A00
		CALL call_f1bd
		LD DE, 0x00A0
		LD HL, 0xBF50
		CALL call_f1bd
		LD DE, 0x2B30
		LD HL, 0x1132
call_f1bd:
		XOR A		; blank A
		JR label_0428
call_f1c0:
		LD A, 0x01
label_0428:
		PUSH HL
		PUSH DE
		PUSH BC
		CALL call_f1cc
		POP BC
		POP DE
		POP HL
		RET
call_f1cc:
		LD C, A
		LD A, D
		OR E
		RET Z
		LD A, (0xF4C1)			; XXX local
		CP 0x0A
		RET Z
		PUSH DE
		EX DE, HL
		LD HL, 0xF4C2			; XXX local
		LD B, 0x09
label_0443:
		LD A, C
		CP (HL)
		JR C, label_045e
		JR NZ, label_0455
		PUSH HL
		INC HL
		LD A, (HL)
		INC HL
		LD H, (HL)
		LD L, A
		OR A
		SBC HL, DE
		POP HL
		JR NC, label_045e
label_0455:
		INC HL
		INC HL
		INC HL
		INC HL
		INC HL
		DJNZ label_0443
		JR label_0473
label_045e:
		PUSH HL
		PUSH DE
		PUSH BC
		LD A, B
		ADD A, A
		ADD A, A
		ADD A, B
		LD C, A
		LD B, 0x0
		LD HL, 0xF4EE		; XXX after the file by quite a bit
		LD DE, 0xF4F3		; XXX after the file by quite a bit
		LDDR			; copy, backwards!
		POP BC
		POP DE
		POP HL
label_0473:
		LD (HL), C
		INC HL
		LD (HL), E
		INC HL
		LD (HL), D
		INC HL
		POP DE
		LD (HL), E
		INC HL
		LD (HL), D
		LD HL, 0xF4C1		; XXX local
		INC (HL)
		PUSH IX
		PUSH IY
		LD IX, 0xF4C2		; XXX local
		LD IY, 0xF4C7		; XXX local
		LD B, 0x09
label_048f:
		LD A, (IX+0x0)
		CP (IY+0x0)
		JR NZ, label_04c8
		INC A
		JR Z, label_04d1
		LD E, (IX+0x03)
		LD D, (IX+0x04)
		LD L, (IX+0x01)
		LD H, (IX+0x02)
		ADD HL, DE
		LD A, L
		CP (IY+0x01)
		JR NZ, label_04c8
		LD A, H
		CP (IY+0x02)
		JR NZ, label_04c8
		LD L, (IY+0x03)
		LD H, (IY+0x04)
		ADD HL, DE
		LD (IX+0x03), L
		LD (IX+0x04), H
		PUSH IY
		POP HL
		CALL call_f270
		JR label_04cf
label_04c8:
		LD DE, 0x0005
		ADD IX, DE		; IX = IX + DE
		ADD IY, DE		; IY = IY + DE
label_04cf:
		DJNZ label_048f
label_04d1:
		POP IY
		POP IX
		RET

call_f270:
		PUSH DE
		PUSH BC
		EX DE, HL
		LD HL, 0xF4F4		; XXX it's after the file, by quite a bit
		OR A
		SBC HL, DE
		LD B, H
		LD C, L
		LD HL, 0x0005
		ADD HL, DE
		LDIR			; block transfer!
		LD A, 0xFF
		LD (DE), A
		LD HL, 0xF4C1		; XXX local
		DEC (HL)
		POP BC
		POP DE
		RET

call_f28b:
		LD A, 0x01
		JR label_04fa
call_f28f:
		XOR A
		JR label_04fa
call_f292:
		LD A, 0x02
label_04fa:
		PUSH DE
		PUSH BC
		LD C, A
		LD HL, 0xF4EF
		LD B, 0x0A
label_0502:
		CALL call_f32a
		JR C, label_0510
		DEC HL
		DEC HL
		DEC HL
		DEC HL
		DEC HL
		DJNZ label_0502
		JR label_0523
label_0510:
		PUSH HL
		INC HL
		LD E, (HL)
		INC HL
		LD D, (HL)
		INC HL
		LD (HL), C
		INC HL
		LD (HL), B
		EX DE, HL
		ADD HL, BC
		EX (SP), HL
		LD A, B
		OR C
		CALL Z, call_f270
		POP HL
		SCF
label_0523:
		POP BC
		POP DE
		RET

call_f2c0:
		XOR A
		LD HL, label_f342
		CALL call_f2f0
		RET NC
		PUSH DE
		PUSH HL
		XOR A
		SUB A, L
		LD E, A
		JR Z, label_0538
		LD L, 0
		INC H
label_0538:
		LD D, 0x00
		EX (SP), HL
		LD A, D
		OR E
		CALL NZ, call_f1bd
		POP HL
		POP DE
		PUSH HL
		ADD HL, DE
		LD A, H
		CP 0x40
		POP HL
		PUSH AF
		CALL NC, call_f1bd
		POP AF
		RET
		XOR A				; blank A
		JR label_0553
call_f2eb:
		LD A, 0x01
label_0553:
		LD HL, call_f32a
call_f2f0:
		PUSH IX
		PUSH DE
		PUSH BC
		PUSH HL
		POP IX
		LD C, A
		LD HL, 0xF4C2		; XXX local
		LD B, 0x0a
label_0563:
		CALL call_f4b1
		JR C, label_0571
		INC HL
		INC HL
		INC HL
		INC HL
		INC HL
		DJNZ label_0563
		JR label_058b
label_0571:
		PUSH HL
		PUSH BC
		INC HL
		LD C, (HL)
		LD A, C
		ADD A, E
		LD (HL), A
		INC HL
		LD B, (HL)
		LD A, B
		ADC A, D
		LD (HL), A
		POP DE
		INC HL
		LD (HL), E
		INC HL
		LD (HL), D
		POP HL
		PUSH BC
		LD A, D
		OR E
		CALL Z, call_f270
		POP HL
		SCF
label_058b:
		POP BC
		POP DE
		POP IX
		RET

call_f32a:
		LD A, C
		XOR (HL)
		RET NZ
		PUSH BC
		PUSH HL
		INC HL
		INC HL
		INC HL
		LD A, (HL)
		SUB A, E
		LD C, A
		INC HL
		LD A, (HL)
		SBC A, D
		LD B, A
		POP HL

		JR C, label_05a5
		POP AF
		SCF
		RET
label_05a5:
		POP BC
		OR A
		RET

label_f342:
		LD A, C
		XOR (HL)
		RET NZ
		PUSH DE
		PUSH BC
		PUSH HL
		INC HL
		LD A, (HL)
		CPL
		INC A
		ADD A, E
		LD E, A
		ADC A, D
		SUB A, E
		LD D, A
		INC HL
		INC HL
		LD A, (HL)
		SUB A, E
		LD C, A
		INC HL
		LD A, (HL)
		SBC A, D
		LD B, A
		POP HL
		JR C, label_05c7
		POP AF
		POP AF
		SCF
		RET
label_05c7:
		POP BC
		POP DE
		OR A
		RET

		LD C, 0xFF
		JR label_05d1
		LD C, 0x00
label_05d1:
		LD DE, 0xF4C2		; XXX local
		LD HL, 0xF4C7		; XXX local
		LD B, 0x09
label_05d9:
		LD A, (HL)
		INC A
		JR Z, label_0607
		LD A, C
		CP 0xFF
		JR Z, label_05e5
		CP (HL)
		JR NZ, label_0600
label_05e5:
		PUSH HL
		PUSH DE
		INC HL
		INC HL
		INC HL
		LD A, (HL)
		INC HL
		LD H, (HL)
		LD L, A
		EX DE, HL
		INC HL
		INC HL
		INC HL
		LD A, (HL)
		INC HL
		LD H, (HL)
		LD L, A
		EX DE, HL
		OR A
		SBC HL, DE
		POP DE
		POP HL
		JR C, label_0600
		LD D, H
		LD E, L
label_0600:
		INC HL
		INC HL
		INC HL
		INC HL
		INC HL
		DJNZ label_05d9
label_0607:
		EX DE, HL
		PUSH HL
		LD B, (HL)
		INC HL
		LD E, (HL)
		INC HL
		LD D, (HL)
		INC HL
		LD A, (HL)
		INC HL
		LD H, (HL)
		LD L, A
		EX (SP), HL
		CALL call_f270
		EX DE, HL
		POP DE
		LD A, B
		CP 0xFF
		RET

label_061d:
		LD DE, 0x0200
		CALL call_f292
		JR NC, label_0631
		LD B, 0x02
		LD DE, 0x5902
		CALL 0xF435
		JR NC, label_0643
		JR label_061d
label_0631:
		LD DE, 0x0200
		CALL call_f28f
		JR NC, label_0643
		LD B, 0x00
		LD DE, 0x5900
		CALL 0xF435
		JR C, label_0631
label_0643:
		LD HL, (0x5902)
		CALL 0xF425
		LD C, B
		LD HL, (0x5900)
		CALL 0xF425
		LD A, B
		ADD A, C
		RRA
		OR A
		RRA
		CP 0x15
		JR C, label_065b
		LD A, 0x14
label_065b:
		OR A
		JR NZ, label_065f
		INC A
label_065f:
		CP B
		CCF
		RET C
		LD B, A
		LD HL, (0x5900)
		LD DE, 0x000D
label_0669:
		ADD HL, DE
		LD A, (HL)
		INC HL
		LD H, (HL)
		LD L, A
		DJNZ label_0669
		XOR A
		ADD HL, DE
		LD C, (HL)
		LD (HL), A
		INC HL
		LD B, (HL)
		LD (HL), A
		LD HL, (0x5902)
label_067a:
		ADD HL, DE
		LD A, (HL)
		INC HL
		OR (HL)
		JR Z, label_0686
		LD A, (HL)
		DEC HL
		LD L, (HL)
		LD H, A
		JR label_067a
label_0686:
		LD (HL), B
		DEC HL
		LD (HL), C
		SCF
		RET

		LD B, 0x00
label_068d:
		LD A, H
		OR L
		RET Z

		INC B
		LD DE, 0x000D
		ADD HL, DE
		LD A, (HL)
		INC HL
		LD H, (HL)
		LD L, A
		JR label_068d
		PUSH IX
		PUSH HL
		PUSH DE
		LD DE, 0x000F
		CALL 0xF2E8
		CALL NC, call_f2eb
		PUSH HL			; HL->IX
		POP IX			; Note, different order
		POP DE			; to what was PUSHed
		POP HL			; above?
		JR NC, label_06cd
		LD (IX+0x00), 0xFF
		LD (IX+0x0A), L
		LD (IX+0x0B), H
		LD (IX+0x0C), B
		EX DE, HL
		LD A, (HL)
		LD (IX+0x0D), A
		INC HL
		LD A, (HL)
		LD (IX+0x0E), A
		PUSH IX			; IX -> DE
		POP DE
		LD (HL), D
		DEC HL
		LD (HL), E
		SCF
label_06cd:
		POP IX
		RET

		LD HL, (0x5900)
		CALL 0xF495
		LD HL, (0x5902)
		CALL 0xF495
		LD B, 0x03
		LD HL, 0xFFE8
label_06e1:
		PUSH BC
		PUSH HL
		CALL 0xF365
		LD B, H
		LD C, L
		POP HL
		JR NC, label_06f5
		LD (HL), A
		INC HL
		LD (HL), C
		INC HL
		LD (HL), B
		INC HL
		LD (HL), E
		INC HL
		LD (HL), D
		INC HL
label_06f5:
		POP BC
		DJNZ label_06e1
		LD (HL), 0xff
		RET

label_06fb:
		LD A, H
		OR L
		RET Z
		LD DE, 0x000A
		ADD HL, DE
		LD E, (HL)
		INC HL
		LD D, (HL)
		INC HL
		LD A, (HL)
		INC HL
		PUSH HL
		EX DE, HL
		LD DE, 0x0200
		CALL label_0428
		POP HL
		LD A, (HL)
		INC HL
		LD H, (HL)
		LD L, A
		JR label_06fb
call_f4b1:
		JP (IX)
call_f4b3:
		JP (HL)
		DEFB 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
		DEFB 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff

; This is used by various locations to store variables
; .. but it's not /in/ the binary file that is generated.
label_f4c1:
